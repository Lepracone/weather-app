{"ast":null,"code":"var _jsxFileName = \"/home/lepracone/the_odin_project/weather-app/weather-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      city: \"Lisbon\",\n      currentCityWeather: \"\",\n      predictionWeather: \"\",\n      invisible: true,\n      isFetching: true\n    };\n    this.getData = this.getData.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.toggleClass = this.toggleClass.bind(this);\n  }\n\n  getData() {\n    const that = this;\n    Promise.all([fetch('http://api.openweathermap.org/data/2.5/weather?q=' + that.state.city + '&appid=4c77efd9f8291e2531b89885b49ca00e&units=metric', {\n      mode: 'cors'\n    }), fetch('http://api.openweathermap.org/data/2.5/forecast?q=' + that.state.city + '&appid=4c77efd9f8291e2531b89885b49ca00e&units=metric', {\n      mode: 'cors'\n    })]).then(async ([current, forecast]) => {\n      const currentWeather = await current.json();\n      const forecastWather = await forecast.json();\n      return [currentWeather, forecastWather];\n    }).then(function (response) {\n      that.setState({\n        currentCityWeather: response[0]\n      });\n      that.setState({\n        predictionWeather: response[1]\n      });\n      console.log(that.state.predictionWeather);\n      that.setState({\n        isFetching: false\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (this.state.invisible === true) {\n      that.toggleClass();\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      city: event.target.value\n    });\n  }\n\n  toggleClass() {\n    const currentState = this.state.invisible;\n    this.setState({\n      invisible: !currentState\n    });\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  handleKeyDown(event) {\n    if (event.key === 'Enter') {\n      this.getData();\n      console.log(\"yep\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"topbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.city,\n      name: \"city\",\n      placeholder: \"Insert City Name\",\n      onChange: this.handleChange,\n      onKeyDown: this.handleKeyDown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.getData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-search-location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 42\n      }\n    }))), this.state.isFetching ? null : /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.invisible ? \"invisible\" : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"topContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, this.state.currentCityWeather.name)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"Temperature :\", this.state.currentCityWeather.main.temp, \"\\xBA\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, \"Feels Like :\", this.state.currentCityWeather.main.feels_like, \"\\xBA\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, \"Description: \", this.state.currentCityWeather.weather[0].description)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"icon\",\n      src: \"http://openweathermap.org/img/w/\" + this.state.currentCityWeather.weather[0].icon + \".png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-wind\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }), \" \", this.state.currentCityWeather.wind.speed, \" m/s\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-compass\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }), \" \", this.state.currentCityWeather.main.temp_max, \" \\xBA\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"middleContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bottomContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/lepracone/the_odin_project/weather-app/weather-app/src/App.js"],"names":["React","Component","App","constructor","state","city","currentCityWeather","predictionWeather","invisible","isFetching","getData","bind","handleChange","toggleClass","that","Promise","all","fetch","mode","then","current","forecast","currentWeather","json","forecastWather","response","setState","console","log","catch","error","event","target","value","currentState","componentDidMount","handleKeyDown","key","render","name","main","temp","feels_like","weather","description","icon","wind","speed","temp_max"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA2B;AACzBE,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAC,QADM;AAEXC,MAAAA,kBAAkB,EAAC,EAFR;AAGXC,MAAAA,iBAAiB,EAAC,EAHP;AAIXC,MAAAA,SAAS,EAAE,IAJA;AAKXC,MAAAA,UAAU,EAAG;AALF,KAAb;AAOF,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACC;;AAEDD,EAAAA,OAAO,GAAG;AACR,UAAMI,IAAI,GAAG,IAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,CACVC,KAAK,CAAC,sDAAoDH,IAAI,CAACV,KAAL,CAAWC,IAA/D,GAAoE,sDAArE,EAA4H;AAACa,MAAAA,IAAI,EAAG;AAAR,KAA5H,CADK,EAEVD,KAAK,CAAC,uDAAqDH,IAAI,CAACV,KAAL,CAAWC,IAAhE,GAAqE,sDAAtE,EAA6H;AAACa,MAAAA,IAAI,EAAG;AAAR,KAA7H,CAFK,CAAZ,EAIGC,IAJH,CAIQ,OAAM,CAACC,OAAD,EAAUC,QAAV,CAAN,KAA8B;AAClC,YAAMC,cAAc,GAAG,MAAMF,OAAO,CAACG,IAAR,EAA7B;AACA,YAAMC,cAAc,GAAG,MAAMH,QAAQ,CAACE,IAAT,EAA7B;AACA,aAAO,CAACD,cAAD,EAAiBE,cAAjB,CAAP;AACD,KARH,EAUGL,IAVH,CAUQ,UAASM,QAAT,EAAkB;AACtBX,MAAAA,IAAI,CAACY,QAAL,CAAc;AAACpB,QAAAA,kBAAkB,EAAEmB,QAAQ,CAAC,CAAD;AAA7B,OAAd;AACAX,MAAAA,IAAI,CAACY,QAAL,CAAc;AAACnB,QAAAA,iBAAiB,EAAEkB,QAAQ,CAAC,CAAD;AAA5B,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACV,KAAL,CAAWG,iBAAvB;AACAO,MAAAA,IAAI,CAACY,QAAL,CAAc;AAACjB,QAAAA,UAAU,EAAE;AAAb,OAAd;AACD,KAfH,EAgBGoB,KAhBH,CAgBS,UAASC,KAAT,EAAe;AACpBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KAlBH;;AAoBE,QAAG,KAAK1B,KAAL,CAAWI,SAAX,KAAyB,IAA5B,EAAiC;AAC/BM,MAAAA,IAAI,CAACD,WAAL;AACD;AAEJ;;AAEDD,EAAAA,YAAY,CAACmB,KAAD,EAAO;AACjB,SAAKL,QAAL,CAAc;AAACrB,MAAAA,IAAI,EAAE0B,KAAK,CAACC,MAAN,CAAaC;AAApB,KAAd;AACD;;AAEDpB,EAAAA,WAAW,GAAE;AACX,UAAMqB,YAAY,GAAG,KAAK9B,KAAL,CAAWI,SAAhC;AACA,SAAKkB,QAAL,CAAc;AAAClB,MAAAA,SAAS,EAAE,CAAC0B;AAAb,KAAd;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKzB,OAAL;AACD;;AAED0B,EAAAA,aAAa,CAACL,KAAD,EAAO;AAClB,QAAGA,KAAK,CAACM,GAAN,KAAc,OAAjB,EAAyB;AACvB,WAAK3B,OAAL;AACCiB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACF;AACF;;AAECU,EAAAA,MAAM,GAAE;AAEN,wBACE;AAAK,MAAA,SAAS,EAAG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAG,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWC,IAFpB;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,WAAW,EAAC,kBAJd;AAKE,MAAA,QAAQ,EAAE,KAAKO,YALjB;AAME,MAAA,SAAS,EAAE,KAAKwB,aANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAWE;AAAQ,MAAA,OAAO,EAAE,KAAK1B,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA+B;AAAG,MAAA,KAAK,EAAC,wBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,CAXF,CADF,EAeG,KAAKN,KAAL,CAAWK,UAAX,GAAuB,IAAvB,gBACC;AAAK,MAAA,SAAS,EAAE,KAAKL,KAAL,CAAWI,SAAX,GAAuB,WAAvB,GAAqC,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAG,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKJ,KAAL,CAAWE,kBAAX,CAA8BiC,IAAnC,CADF,CADF,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkB,KAAKnC,KAAL,CAAWE,kBAAX,CAA8BkC,IAA9B,CAAmCC,IAArD,SADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiB,KAAKrC,KAAL,CAAWE,kBAAX,CAA8BkC,IAA9B,CAAmCE,UAApD,SAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkB,KAAKtC,KAAL,CAAWE,kBAAX,CAA8BqC,OAA9B,CAAsC,CAAtC,EAAyCC,WAA3D,CAHF,CALJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAC,MAAT;AAAgB,MAAA,GAAG,EAAE,qCAAoC,KAAKxC,KAAL,CAAWE,kBAAX,CAA8BqC,OAA9B,CAAsC,CAAtC,EAAyCE,IAA7E,GAAoF,MAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAG,MAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,OAAiC,KAAKzC,KAAL,CAAWE,kBAAX,CAA8BwC,IAA9B,CAAmCC,KAApE,SAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAG,MAAA,KAAK,EAAC,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,OAAoC,KAAK3C,KAAL,CAAWE,kBAAX,CAA8BkC,IAA9B,CAAmCQ,QAAvE,UAHF,CAXJ,eAgBE;AAAK,MAAA,SAAS,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAhBF,eAkBE;AAAK,MAAA,SAAS,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAlBF,CAhBJ,CADF;AA4CD;;AA7GwB;;AAiH3B,eAAe9C,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nclass App extends Component{\n  constructor(){\n    super()\n    this.state = {\n      city:\"Lisbon\",\n      currentCityWeather:\"\",\n      predictionWeather:\"\",\n      invisible: true,\n      isFetching : true,\n    }\n  this.getData = this.getData.bind(this)\n  this.handleChange = this.handleChange.bind(this)\n  this.toggleClass = this.toggleClass.bind(this)\n  }\n\n  getData() {\n    const that = this;\n    Promise.all([\n      fetch('http://api.openweathermap.org/data/2.5/weather?q='+that.state.city+'&appid=4c77efd9f8291e2531b89885b49ca00e&units=metric',{mode : 'cors'}),\n      fetch('http://api.openweathermap.org/data/2.5/forecast?q='+that.state.city+'&appid=4c77efd9f8291e2531b89885b49ca00e&units=metric',{mode : 'cors'})\n    ])\n      .then(async([current, forecast]) => {\n        const currentWeather = await current.json();\n        const forecastWather = await forecast.json();\n        return [currentWeather, forecastWather]\n      })\n\n      .then(function(response){\n        that.setState({currentCityWeather: response[0]})\n        that.setState({predictionWeather: response[1]})\n        console.log(that.state.predictionWeather)\n        that.setState({isFetching: false})\n      })\n      .catch(function(error){\n        console.log(error)\n      })\n\n      if(this.state.invisible === true){\n        that.toggleClass()\n      }\n      \n  }\n\n  handleChange(event){\n    this.setState({city: event.target.value})\n  }\n\n  toggleClass(){\n    const currentState = this.state.invisible;\n    this.setState({invisible: !currentState});\n}\n\ncomponentDidMount() {\n  this.getData();\n}\n\nhandleKeyDown(event){\n  if(event.key === 'Enter'){\n    this.getData();\n     console.log(\"yep\")\n  }\n}\n\n  render(){\n  \n    return(\n      <div className = \"mainContainer\">\n        <div className = \"topbar\">\n          \n          <input \n            type=\"text\"\n            value={this.state.city}\n            name=\"city\"\n            placeholder=\"Insert City Name\"\n            onChange={this.handleChange}\n            onKeyDown={this.handleKeyDown}\n          />\n          \n          <button onClick={this.getData}><i class=\"fas fa-search-location\"></i></button>\n        </div>\n\n        {this.state.isFetching? null : (\n          <div className={this.state.invisible ? \"invisible\" : null}>\n            <div className = \"topContainer\">\n              <h2>{this.state.currentCityWeather.name}</h2>\n            </div>\n\n              <div> \n                <h4>Temperature :{this.state.currentCityWeather.main.temp}º</h4>\n                <h4>Feels Like :{this.state.currentCityWeather.main.feels_like}º</h4>\n                <h1>Description: {this.state.currentCityWeather.weather[0].description}</h1>\n              </div>\n\n              <div>\n                <img alt=\"icon\" src={\"http://openweathermap.org/img/w/\"+ this.state.currentCityWeather.weather[0].icon + \".png\" }/>\n                <h4><i class=\"fas fa-wind\"></i> {this.state.currentCityWeather.wind.speed} m/s</h4>\n                <h4><i class=\"fas fa-compass\"></i> {this.state.currentCityWeather.main.temp_max} º</h4>\n              </div>\n            <div className = \"middleContainer\"> </div>\n\n            <div className = \"bottomContainer\">\n              <div>\n              </div>\n            </div>\n          </div>\n        )}  \n      </div>\n      \n    )\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}