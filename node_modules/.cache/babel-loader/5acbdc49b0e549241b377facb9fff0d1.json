{"ast":null,"code":"var _jsxFileName = \"/home/lepracone/the_odin_project/weather-app/weather-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      city: \"Lisbon\",\n      currentCityWeather: \"\",\n      predictionWeather: \"\",\n      invisible: true,\n      isFetching: true,\n      units: \"metric\"\n    };\n    this.getData = this.getData.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.toggleClass = this.toggleClass.bind(this);\n  }\n\n  getData() {\n    const that = this;\n    Promise.all([fetch('http://api.openweathermap.org/data/2.5/weather?q=' + that.state.city + '&appid=4c77efd9f8291e2531b89885b49ca00e&units=' + that.state.units, {\n      mode: 'cors'\n    }), fetch('http://api.openweathermap.org/data/2.5/forecast?q=' + that.state.city + '&appid=4c77efd9f8291e2531b89885b49ca00e&units=metric', {\n      mode: 'cors'\n    })]).then(async ([current, forecast]) => {\n      const currentWeather = await current.json();\n      const forecastWather = await forecast.json();\n      return [currentWeather, forecastWather];\n    }).then(function (response) {\n      that.setState({\n        currentCityWeather: response[0]\n      });\n      that.setState({\n        predictionWeather: response[1]\n      });\n      that.setState({\n        isFetching: false\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (this.state.invisible === true) {\n      that.toggleClass();\n    }\n  }\n\n  async handleChange(event) {\n    const {\n      name,\n      value,\n      type\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n    (await type) === \"radio\" ? this.getData() : console.log(\"\");\n    this.setState({\n      [name]: value\n    });\n  }\n\n  toggleClass() {\n    const currentState = this.state.invisible;\n    this.setState({\n      invisible: !currentState\n    });\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"topbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"units\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"units-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"metric\",\n      checked: this.state.units === \"metric\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }), \"\\xBAC\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"units-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"imperial\",\n      checked: this.state.units === \"imperial\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }), \"Fahrenheit\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.city,\n      name: \"city\",\n      placeholder: \"Insert City Name\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.getData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-search-location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 42\n      }\n    })))), this.state.isFetching ? null : /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.invisible ? \"invisible\" : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"topContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, this.state.currentCityWeather.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"middleContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"leftCollumn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"temperature\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-thermometer-half\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 48\n      }\n    }), \" \", this.state.currentCityWeather.main.temp, \"\\xBA\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }), \" Feels Like :\", this.state.currentCityWeather.main.feels_like, \"\\xBA\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rightCollumn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"weatherImage\",\n      alt: \"icon\",\n      src: \"http://openweathermap.org/img/w/\" + this.state.currentCityWeather.weather[0].icon + \".png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }, this.state.currentCityWeather.weather[0].description), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-wind\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 26\n      }\n    }), \" \", this.state.currentCityWeather.wind.speed, \" m/s\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-compass\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 26\n      }\n    }), \" \", this.state.currentCityWeather.wind.deg, \" \\xBA\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-tint\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 26\n      }\n    }), \" Humidity :  \", this.state.currentCityWeather.main.humidity, \" %\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bottomContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/lepracone/the_odin_project/weather-app/weather-app/src/App.js"],"names":["React","Component","App","constructor","state","city","currentCityWeather","predictionWeather","invisible","isFetching","units","getData","bind","handleChange","toggleClass","that","Promise","all","fetch","mode","then","current","forecast","currentWeather","json","forecastWather","response","setState","catch","error","console","log","event","name","value","type","target","currentState","componentDidMount","render","main","temp","feels_like","weather","icon","description","wind","speed","deg","humidity"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nclass App extends Component{\n  constructor(){\n    super()\n    this.state = {\n      city:\"Lisbon\",\n      currentCityWeather:\"\",\n      predictionWeather:\"\",\n      invisible: true,\n      isFetching : true,\n      units: \"metric\"\n    }\n  this.getData = this.getData.bind(this)\n  this.handleChange = this.handleChange.bind(this)\n  this.toggleClass = this.toggleClass.bind(this)\n  }\n\n  getData() {\n    const that = this;\n    Promise.all([\n      fetch('http://api.openweathermap.org/data/2.5/weather?q='+that.state.city+'&appid=4c77efd9f8291e2531b89885b49ca00e&units='+that.state.units,{mode : 'cors'}),\n      fetch('http://api.openweathermap.org/data/2.5/forecast?q='+that.state.city+'&appid=4c77efd9f8291e2531b89885b49ca00e&units=metric',{mode : 'cors'})\n    ])\n      .then(async([current, forecast]) => {\n        const currentWeather = await current.json();\n        const forecastWather = await forecast.json();\n        return [currentWeather, forecastWather]\n      })\n\n      .then(function(response){\n        that.setState({currentCityWeather: response[0]})\n        that.setState({predictionWeather: response[1]})\n        that.setState({isFetching: false})\n      })\n      .catch(function(error){\n        console.log(error)\n      })\n\n      if(this.state.invisible === true){\n        that.toggleClass()\n      }\n      \n  }\n\n  async handleChange(event){\n    const {name, value, type} = event.target\n    this.setState({[name]: value})\n    await type === \"radio\" ? this.getData() : console.log(\"\");\n    this.setState({[name]: value})\n    \n\n  }\n\n\n  toggleClass(){\n    const currentState = this.state.invisible;\n    this.setState({invisible: !currentState});\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n\n  render(){\n  \n    return(\n      <div className = \"mainContainer\">\n        <div className = \"topbar\">\n          <div className=\"units\">\n            <label className=\"units-label\">\n              <input\n                type=\"radio\"\n                name=\"units\"\n                value=\"metric\"\n                checked={this.state.units===\"metric\"}\n                onChange={this.handleChange}\n              />ºC\n            </label>\n            <label className=\"units-label\">\n              <input\n                type=\"radio\"\n                name=\"units\"\n                value=\"imperial\"\n                checked={this.state.units===\"imperial\"}\n                onChange={this.handleChange}\n              />Fahrenheit\n            </label>\n          </div>\n          \n          <div className=\"search-bar\">\n          <input \n            type=\"text\"\n            value={this.state.city}\n            name=\"city\"\n            placeholder=\"Insert City Name\"\n            onChange={this.handleChange} \n          />\n          \n          <button onClick={this.getData}><i className=\"fas fa-search-location\"></i></button>\n          </div>\n        </div>\n\n        {this.state.isFetching? null : (\n          <div className={this.state.invisible ? \"invisible\" : null}>\n            <div className = \"topContainer\">\n              <h1>{this.state.currentCityWeather.name}</h1>\n            </div>\n\n             \n            <div className = \"middleContainer\"> \n              <div className=\"leftCollumn\"> \n                  <div className=\"temperature\"><i className=\"fas fa-thermometer-half\"></i> {this.state.currentCityWeather.main.temp}º</div>\n                  <div> <i className=\"fas fa-user\"></i> Feels Like :{this.state.currentCityWeather.main.feels_like}º</div>\n                </div>\n\n                <div className=\"rightCollumn\"> \n                  <img className=\"weatherImage\" alt=\"icon\" src={\"http://openweathermap.org/img/w/\"+ this.state.currentCityWeather.weather[0].icon + \".png\" }/>\n                  <div>{this.state.currentCityWeather.weather[0].description}</div>\n                  <div className=\"row\">\n                    <div><i className=\"fas fa-wind\"></i> {this.state.currentCityWeather.wind.speed} m/s</div>\n                    <div><i className=\"fas fa-compass\"></i> {this.state.currentCityWeather.wind.deg} º</div>\n                  </div>\n                  <div className=\"row\">\n                    <div><i className=\"fas fa-tint\"></i> Humidity :  {this.state.currentCityWeather.main.humidity} %</div>\n                  </div>\n                  \n              </div>\n            </div>\n\n            <div className = \"bottomContainer\">\n              <div>\n              </div>\n            </div>\n          </div>\n        )}  \n      </div>\n      \n    )\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}